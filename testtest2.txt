

para2=ps$y
set para2=($para2:q "last")
echo $para2

end

你好不好
很好
太棒了
平安健康
過年假期去哪玩?
白沙灣

set all_files = ()
set all_files = ( Screen*png )
foreach ii ( `seq 1 1 ${#all_files}` )
    set iname = "${all_files[$ii]"
    set oname = `echo "${iname}" | tr ' ' '_'`
    echo "${iname} -> ${oname}"
end


foreach i ( 1 2 3 4 5 6 7 8 9 10 )
echo $i
end


set autolist
nm /usr/lib/libt[tab]


echo "${para2[@]}"

set autolist
set local33 = /usr/local
ls $local33[tab]
ls $local33/[^D]




#!/bin/bash
i=0
args=()
while [ $i -lt 5 ]; do
    args+=("PS${i}")
    echo "${args[@]}"
    let i=i+1
done

while IFS=, read -r field1 field2 field3
 do
 echo "Field 1: $field1"
 echo "Field 2: $field2"
 echo "Field 3: $field3"
 done < file.csv



set arr=()
arr=(1 2 3)
arr+=(4)
echo ${arr[@]}


num=100
num+=200
echo $num

set firstName=()
firstName='John'
fullName=$firstName
echo $fullName
lastName='Doe'
fullName+=' '
fullName+=$lastName
echo $fullName

echo
setenv LC_ALL C ; setenv LANG C
echo "Environment: LC_ALL = $LC_ALL, LANG = $LANG"
echo "(Versions displayed with local utility version)"
sh -c "version >/dev/null 2>&1" && version "=o" csh
echo

set my_list = ( the hole in the wall gang )

echo $my_list

foreach item ( $my_list )
        echo item+=$item
end

  git branch -m main main
  git fetch origin
  git branch -u origin/main main
  git remote set-head origin -a

set arr={10 20 30} 
echo ${arr[@]}


#!/bin/csh
echo "hello andy"
set ans={`grep -r and .`}
echo $ans


#!/bin/tcsh
set login = `whoami`
ps -aef > testlog1
#grep $login:q testlog1
set query = `grep $login:q testlog1`
echo $query:q



foreach corner (`echo $list_corner`)
   set dir_corner=$corner:gt
   echo $dir_corner
   if ($dir_corner !~ "worst" ) then
       echo "\n<corner: $dir_corner>"

   endif
end


for fn in `cat log1`; do
    echo "the next file is $fn"
    cat $fn
done >> log2

a=(1 2 3 4)
echo ${#a[@]}



xargs cat <filenames.txt

ls log1 | xargs cat >> log2  等於 cat log1 >> log2


for dir in $(ls -d */)
do
    if [ -d $dir -a "$(ls -A $dir )" ]
    then
        echo""
    else
        blank_dir=$dir
        echo $blank_dir
    fi
done

git config --global color.ui true

